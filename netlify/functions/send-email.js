// netlify/functions/send-email.jsexport default async function handler(event) {  try {    if (event.httpMethod !== 'POST') {      return new Response(JSON.stringify({ error: 'Method not allowed' }), { status: 405 });    }
    const ADMIN = process.env.ADMIN_EMAIL; // ustawione w Netlify → Environment variables    const APIKEY = process.env.RESEND_API_KEY; // ustawione w Netlify → Environment variables    const FROM = process.env.FROM_EMAIL || 'onboarding@resend.dev';
    if (!APIKEY) {      return new Response(JSON.stringify({ error: 'Missing RESEND_API_KEY env var' }), { status: 500 });    }
    const body = JSON.parse(event.body || '{}');    const mode = body.mode || 'client'; // 'admin' | 'both' | 'client'    const clientTo = (body.to || '').trim();    const subject = body.subject || 'Wiadomość';    const html = body.html || '<p>(brak treści)</p>';
    let to;    if (mode === 'admin') {      if (!ADMIN) return new Response(JSON.stringify({ error: 'ADMIN_EMAIL not set' }), { status: 500 });      to = ADMIN;    } else if (mode === 'both') {      if (!ADMIN) return new Response(JSON.stringify({ error: 'ADMIN_EMAIL not set' }), { status: 500 });      if (!clientTo) return new Response(JSON.stringify({ error: 'Missing client email "to"' }), { status: 400 });      to = [ADMIN, clientTo]; // wyśle do obu    } else {      // 'client'      if (!clientTo) return new Response(JSON.stringify({ error: 'Missing client email "to"' }), { status: 400 });      to = clientTo;    }
    const resp = await fetch('https://api.resend.com/emails', {      method: 'POST',      headers: {        'Authorization': `Bearer ${APIKEY}`,        'Content-Type': 'application/json'      },      body: JSON.stringify({ from: FROM, to, subject, html })    });
    const data = await resp.json();    if (!resp.ok) {      return new Response(JSON.stringify({ ok: false, status: resp.status, data }), { status: 502 });    }
    return new Response(JSON.stringify({ ok: true, id: data.id || null }), { status: 200 });  } catch (e) {    return new Response(JSON.stringify({ error: 'Server error' }), { status: 500 });  }}